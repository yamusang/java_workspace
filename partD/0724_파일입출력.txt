프로그래밍 작업
               메모리,cpu
데이터 입력  --> 연산/처리 -->  결과 출력
  콘솔입력                     콘솔 출력       (표준입출력 stdin, stdout)
  파일입력                     파일 출력        
    입출력의 과정에는 stream이 동작합니다. 
    입력할 때는 InputStream, 출력할때는 OutputStream입니다.
    InputStream : 입력장치에서 메모리로 전달 역할. 입력장치가 사용하는 메모리는 입력 버퍼.
    OutputStream : 메모리에서 출력장치로 전달 역할. 출력장치는 출력버퍼.
      처리과정에서 입력버퍼 또는 출력버퍼의 값이 프로그램의 변수로 읽기/쓰기 
1. File 클래스
   - 파일과 디렉토리의 정보를 다루는 클래스
   - exists(), length(), canRead(), canWrite(), mkdir() 등의 메서드 제공
   - 실제 파일 내용 읽기/쓰기는 불가능

2. FileWriter/FileReader
   - 문자 기반 파일 입출력
   - 텍스트 파일 처리에 적합(문자 인코딩-2진 데이터를 해당 문자로 변환)
   - 한 문자씩 처리 : 예시는 txt, md, 소스코드 등 자바는 문자 타입 char(2바이트)
   => 행(line)단위 입출력을 하려면 PrintWriter, Scanner

3. FileOutputStream/FileInputStream
   - 바이트 기반 파일 입출력
   - 바이너리 파일 처리에 적합
   - 한 바이트씩 처리 : 예시는 문자기반의 파일이 아닌 것. 이미지, 오디오, 영상

4. BufferedWriter/BufferedReader
   - 버퍼를 사용하여 성능 향상. 프로그램으로 만드는 버퍼.
   - 줄 단위 처리 가능 (readLine(), newLine())
   - 대용량 파일 처리 시 효율적

5. Scanner
   - 다양한 타입의 데이터를 쉽게 읽을 수 있음
   - hasNextInt(), nextInt(), nextLine() 등 편리한 메서드
   - 파싱 기능 내장

주의사항:
- try-with-resources 구문을 사용하여 자동으로 리소스 해제
- IOException 처리 필수
- 파일 경로에 사용하는 기호와 방식은 윈도우와 리눅스 운영체제에 따라 다름